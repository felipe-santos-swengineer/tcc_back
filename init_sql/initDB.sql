CREATE TABLE IF NOT EXISTS usuarios(
	id SERIAL NOT NULL,
	nome VARCHAR(200),
	email VARCHAR(200),
	senha VARCHAR(50),
	sexo VARCHAR(20),
	data_nascimento VARCHAR(10),
	telefone VARCHAR(15),
	cidade VARCHAR(100),
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	tipo VARCHAR(10),
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS usuarios_pendentes(
	id SERIAL NOT NULL,
	nome VARCHAR(200),
	email VARCHAR(200),
	senha VARCHAR(50),
	sexo VARCHAR(20),
	data_nascimento VARCHAR(10),
	telefone VARCHAR(15),
	cidade VARCHAR(100),
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	tipo VARCHAR(10),
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS foto_perfil (
  id SERIAL NOT NULL,
  user_id INT,
  usertoken VARCHAR(100),
  img_json JSONB
);

CREATE TABLE IF NOT EXISTS publicacao(
	id SERIAL NOT NULL,
	conteudo VARCHAR NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	visivel BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS likes(
	id SERIAL NOT NULL,
	id_pub VARCHAR NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comentarios(
	id SERIAL NOT NULL,
	id_pub VARCHAR NOT NULL,
    conteudo VARCHAR NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS denuncias(
	id SERIAL NOT NULL,
	id_pub VARCHAR NOT NULL,
    conteudo VARCHAR NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS amigos(
	id SERIAL NOT NULL,
	pessoa_id INTEGER NOT NULL,
	pessoa1_id INTEGER NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS solicitacao_amigo(
	id SERIAL NOT NULL,
	de_id INTEGER NOT NULL,
	para_id INTEGER NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);



